
@{
    ViewBag.Title = "EditSurvey";
    Layout = "~/Areas/Survey/Views/Shared/_Layout.cshtml";
}


@model DDCA.Areas.Survey.ViewModels.SurveyEdit

@{
    /**/

    /**/

    /**/

    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.InsertionMode = InsertionMode.Replace;
    options.UpdateTargetId = "divContainer";
    //options.OnSuccess = "OnSuccess()";
    //options.OnFailure = "";

}



@using (Ajax.BeginForm("EditSurvey", options))
{

    <h2 class="text-center text-primary">Edit Survey Data</h2>
    <hr />


    @Html.HiddenFor(Model => Model.surveyId)
    <div class="row">
        <div class="col-sm-6">
            <h4 class="text-left text-info"><b>Clients Information</b></h4>
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(x => x.Client.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.Client.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Client.Name, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Client.Address, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.Client.Address, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Client.Address, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Client.Region, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(x => x.Client.Region, ViewBag.CLientRegions as SelectList, "-- Select Region Name --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Client.Region, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Client.Phone, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.Client.Phone, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Client.Phone, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Client.Email, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.Client.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Client.Email, null, new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>

        <div class="col-sm-6">
            <h4 class="text-left text-info"><b>Survey Site Information</b></h4>
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(x => x.Region, new { @class = "control-label col-sm-2" })

                    <div class="col-sm-10">
                        @Html.DropDownListFor(x => x.Region, ViewBag.GeosurveyRegions as SelectList, "-- Select Region Name --", new { @class = "form-control"})
                        @Html.ValidationMessageFor(x => x.Region, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.District, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(x => x.District, ViewBag.DistrictLists as SelectList, "-- Select District Name --", new { @class = "form-control"})
                        @Html.ValidationMessageFor(x => x.District, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Village, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.Village, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Village, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(x => x.SurveyorType, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.SurveyorType, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.SurveyorType, null, new { @class = "text-danger" })
        </div>*@

                    @Html.LabelFor(x => x.SurveyorType, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.RadioButtonFor(x => x.SurveyorType, "DDCA", new { id = "typeDDCA"})
                        DDCA Staff
                    </div>

                    <div class="col-sm-10">
                        @Html.RadioButtonFor(x => x.SurveyorType, "External", new { id = "typeExternal" })
                        External
                    </div>

                </div>
            </div>
        </div>
    </div>

    <br />


    <div class="row">
        <div class="col-sm-6">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(x => x.Cost, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.Cost, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Cost, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.StartDate, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.StartDate, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(x => x.SurveyorName, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(x => x.SurveyorName, ViewBag.Staff as SelectList, "-- Select Staff Name --", new { @class = "form-control"})
                        @Html.ValidationMessageFor(x => x.SurveyorName, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.EndDate, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(x => x.EndDate, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>


    <h3 class="text-center text-uppercase text-info"><b>Survey Results </b> <o class="text-lowercase">at</o> <i class="text-capitalize">@ViewBag.Village</i></h3>
    @*<div class="row">
        @Html.HiddenFor(Model => Model.ProfileEditor1.Id)
        <div class="text-center">
            <h3>
                <u><text class="text-success">VES</text>@Model.ProfileEditor1.VESPoints</u>
            </h3>
        </div>

        <div class="col-sm-6">
            <div class="form-horizontal">


                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor1.Northing, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.ProfileEditor1.Northing, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor1.Northing, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor1.Easting, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.ProfileEditor1.Easting, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor1.Easting, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor1.Elevation, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.ProfileEditor1.Elevation, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor1.Elevation, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor1.SurveyMethod, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(x => x.ProfileEditor1.SurveyMethod, ViewBag.SurveyTypes1 as SelectList, "-- Select a Method--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor1.SurveyMethod, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor1.Recommend, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextAreaFor(x => x.ProfileEditor1.Recommend, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor1.Recommend, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        @Html.HiddenFor(Model => Model.ProfileEditor2.Id)
        <h3 class="text-center">
            <u><text class="text-success">VES</text>@Model.ProfileEditor2.VESPoints</u>
        </h3>
        <div class="col-sm-6">
            <div class="form-horizontal">

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor2.Northing, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.ProfileEditor2.Northing, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor2.Northing, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor2.Easting, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.ProfileEditor2.Easting, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor2.Easting, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor2.Elevation, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.ProfileEditor2.Elevation, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor2.Elevation, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor2.SurveyMethod, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(x => x.ProfileEditor2.SurveyMethod, ViewBag.SurveyTypes2 as SelectList, "-- Select a Method--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor2.SurveyMethod, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor2.Recommend, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextAreaFor(x => x.ProfileEditor2.Recommend, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor2.Recommend, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        @Html.HiddenFor(Model => Model.ProfileEditor3.Id)
        <h3 class="text-center">
            <u><text class="text-success">VES</text>@Model.ProfileEditor3.VESPoints</u>
        </h3>

        <div class="col-sm-6">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor3.Northing, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.ProfileEditor3.Northing, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor3.Northing, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor3.Easting, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.ProfileEditor3.Easting, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor3.Easting, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor3.Elevation, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.ProfileEditor3.Elevation, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor3.Elevation, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-horizontal">

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor3.SurveyMethod, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(x => x.ProfileEditor3.SurveyMethod, ViewBag.SurveyTypes3 as SelectList, "-- Select a Method--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor3.SurveyMethod, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor3.Recommend, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextAreaFor(x => x.ProfileEditor3.Recommend, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor3.Recommend, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>*@
    @*<br />
    <div class="row">
        <div class="">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(x => x.ProfileEditor1.SiteRecommendation, new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.TextAreaFor(x => x.SiteRecommendation, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProfileEditor1.SiteRecommendation, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />*@

    <input type="submit" value='Update' class="btn btn-primary pull-right" />
    <a href="@Url.Action("index")" class="btn btn-success">Or Back To List</a>

    <br />
    <br />


    }

    @section scripts{
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript">
            function OnSuccess() {
                $.notify("Access granted", "success");
            }

            function OnFailure() {
                $.notify("BOOM!", "error");
            }


            $(document).ready(function () {
                $('#StartDate').datetimepicker({
                    format: "MM/DD/YYYY"
                }).on('dp.change', function (e) {
                    $(this).data('DateTimePicker').hide();
                });
            });

            $(document).ready(function () {
                $('#EndDate').datetimepicker({
                    format: "MM/DD/YYYY"
                }).on('dp.change', function (e) {
                    $(this).data('DateTimePicker').hide();
                });
            });

            
            $(document).ready(function () {
                $('#Region').change(function () {
                    var regionId = $(this).val();
                    debugger
                    $.ajax({
                        type: "post",
                        url: "/Survey/Surveys/GetDistrictList?RId=" + regionId,
                        contentType: "html",
                        success: function (response) {
                            debugger
                            $('#District').empty();
                            $('#District').append(response);
                        }
                    })
                })
            })

            $('#typeDDCA').click(function () {
                var $this = $(this);

                if ($this.is(':checked')) {
                    $('#Cost').removeAttr("disabled");
                    $('#StartDate').removeAttr("disabled");
                    $('#SurveyorName').removeAttr("disabled");
                    $('#EndDate').removeAttr("disabled");
                    //$('#Cost').removeAttr("disabled");
                } else {


                }
            });

            $('#typeExternal').click(function () {
                var $this = $(this);

                if ($this.is(':checked')) {
                    $('#Cost').attr("disabled", "disabled");
                    $('#StartDate').attr("disabled", "disabled");
                    $('#SurveyorName').attr("disabled", "disabled");
                    $('#EndDate').attr("disabled", "disabled");
                } else {


                }
            });
        </script>

    }




