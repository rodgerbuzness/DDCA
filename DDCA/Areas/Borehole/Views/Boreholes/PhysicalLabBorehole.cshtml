
@model DDCA.Areas.Borehole.ViewModels.PhysicalLabNew


@{
    /**/

    /**/

    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.InsertionMode = InsertionMode.Replace;
    options.UpdateTargetId = "divContainer";

}

@using (Ajax.BeginForm("PhysicalLabBorehole", options))
{

    <h2 class="text-center text-primary">New Borehole Data</h2>
    <hr />
    <h2 class="">Step 7/<i class="text-info">7</i> :</h2>

    @Html.AntiForgeryToken()
    @*@Html.ValidationSummary()*@

    <div class="container">
        <div class="row">
            <div class="col-sm-6">
                <h4 class="text-center text-info"><b>Physical Analysis Results</b></h4>
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Color, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.Color, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Color, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Turbidity, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.Turbidity, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Turbidity, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Odour, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.Odour, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Odour, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.SettleableMatter, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.SettleableMatter, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.SettleableMatter, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.PH, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.PH, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.PH, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Taste, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.Taste, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Taste, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Conductivity, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.Conductivity, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Conductivity, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.FiltrateResidue, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.FiltrateResidue, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.FiltrateResidue, null, new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(x => x.NonFiltrateResidue, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.NonFiltrateResidue, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.NonFiltrateResidue, null, new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(x => x.VolatileFixedResidue, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.VolatileFixedResidue, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.VolatileFixedResidue, null, new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
            </div>


            <div class="col-sm-6">
                <h4 class="text-center text-info"><b>Laboratory Informations</b></h4>
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(x => x.LabName, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.LabName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.LabName, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.CollectedDate, new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.CollectedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.CollectedDate, null, new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(x => x.AnalysisDate, new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.AnalysisDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.AnalysisDate, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Remarks, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Remarks, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Recommend, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(x => x.Recommend, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Recommend, null, new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>


        </div>


        <input type="submit" name="nextBtn" value="Register" class="btn btn-primary pull-right" />

        <br />
        <br />
    </div>

}







